{
  "name": "token-tx-sonner",
  "type": "registry:ui",
  "dependencies": [
    "react",
    "viem",
    "wagmi"
  ],
  "files": [
    {
      "path": "ui/token-tx-sonner.tsx",
      "content": "\"use client\";\n\nimport { toast } from \"sonner\";\nimport { waitForTransactionReceipt } from \"@wagmi/core\";\nimport { wagmiActionChainConfig } from \"@/config/wagmi-config\";\n\ntype TxError = {\n  message: string;\n};\n\nconst showTxSonner = (\n  txHash: string,\n  txBaseUrl?: string,\n  duration?: number,\n) => {\n  const toastId = txMessageStatusHandler({\n    isLoading: true,\n    isSuccess: false,\n    isError: false,\n    txHash,\n    txBaseUrl,\n  });\n\n  waitForTransactionReceipt(wagmiActionChainConfig, {\n    confirmations: 2,\n    hash: txHash as `0x${string}`,\n  })\n    .then(() => {\n      txMessageStatusHandler({\n        isLoading: false,\n        isSuccess: true,\n        isError: false,\n        txHash,\n        txBaseUrl,\n        error: undefined,\n        toastId: toastId?.toString(),\n        toastDuration: duration,\n      });\n    })\n    .catch((error: TxError) => {\n      txMessageStatusHandler({\n        isLoading: false,\n        isSuccess: false,\n        isError: true,\n        txHash,\n        txBaseUrl,\n        error,\n        toastId: toastId?.toString(),\n        toastDuration: duration,\n      });\n    })\n    .finally(() => {\n      if (toastId) {\n        toast.dismiss(toastId);\n      }\n    });\n};\n\nconst txMessageStatusHandler = ({\n  isLoading,\n  isSuccess,\n  isError,\n  txHash,\n  txBaseUrl,\n  error,\n  toastId,\n  toastDuration = 5000,\n}: {\n  isLoading: boolean;\n  isSuccess: boolean;\n  isError: boolean;\n  txHash: string;\n  txBaseUrl?: string;\n  error?: TxError;\n  toastId?: string;\n  toastDuration?: number;\n}) => {\n  if (isLoading) {\n    return toast.loading(\"Transaction is pending...\", {\n      description: \"Waiting for confirmation...\",\n      duration: 30000,\n    });\n  } else if (isSuccess && toastId) {\n    toast.success(\"Transaction successful!\", {\n      description: (\n        <span>\n          Your transaction has been confirmed.\n          {txBaseUrl && (\n            <>\n              {\" \"}\n              See details{\" \"}\n              <a\n                className=\"underline\"\n                href={`${txBaseUrl}${txHash}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                here\n              </a>\n              .\n            </>\n          )}\n        </span>\n      ),\n      duration: toastDuration,\n    });\n  } else if (isError && toastId) {\n    toast.error(\"Transaction failed\", {\n      description: `Something went wrong: ${error?.message || \"Unknown error\"}`,\n      duration: toastDuration,\n    });\n    console.error(\"error:\", error);\n  }\n};\n\nexport { toast, showTxSonner };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}