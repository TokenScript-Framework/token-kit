{
  "name": "token-thumbnail",
  "dependencies": ["lucide-react"],
  "shadcnDependencies": ["card", "tooltip", "avatar"],
  "files": [
    {
      "name": "token-thumbnail.tsx",
      "content": "import { Avatar, AvatarFallback, AvatarImage } from \"@/components/default/ui/avatar\";\nimport { Card, CardContent } from \"@/components/default/ui/card\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/default/ui/tooltip\";\nimport { cn } from \"@/lib/utils\";\nimport { ShieldCheck, ShieldX } from \"lucide-react\";\n\ntype TokenCollection = {\n  name: string;\n  address: `0x${string}`;\n  logoURI?: string;\n  verified: boolean;\n};\n\nexport interface TokenThumbnailProps {\n  token: TokenCollection;\n  onClick?: () => void;\n  className?: string;\n}\n\nexport const TokenThumbnail = ({\n  token,\n  onClick,\n  className,\n}: TokenThumbnailProps) => {\n  return (\n    <Card\n      className={cn(\n        \"cursor-pointer text-left dark:bg-gray-900  hover:bg-accent w-full\",\n        className,\n      )}\n      onClick={onClick}\n    >\n      <CardContent className=\"p-4\">\n        <div className=\"flex justify-between items-center gap-10\">\n          <div className=\"flex justify-start items-center gap-3\">\n            <Avatar className=\"w-10 h-10\">\n              <AvatarImage src={token.logoURI} alt=\"token\" />\n              <AvatarFallback className=\"\">T</AvatarFallback>\n            </Avatar>\n\n            <div className=\"\">\n              <div className=\"font-bold\">\n                <span>{token.name}</span>\n              </div>\n              <div className=\"\">\n                <span className=\"hover:text-primary-500 text-[12px] text-gray-500 underline \">\n                  {formatAddress(token.address)}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <TooltipProvider>\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <div className=\"flex justify-end\">\n                    {token.verified ? (\n                      <ShieldCheck color=\"#16a34a\" />\n                    ) : (\n                      <ShieldX color=\"#aa3131\" />\n                    )}\n                  </div>\n                </TooltipTrigger>\n                <TooltipContent>\n                  {token.verified ? \"Verified\" : \"Unverified\"}\n                </TooltipContent>\n              </Tooltip>\n            </TooltipProvider>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst formatAddress = (\n  address: `0x${string}`,\n  prefixLength = 6,\n  suffixLength = 4,\n): string => {\n  return `${address.slice(0, prefixLength)}...${address.slice(-suffixLength)}`;\n};\n"
    }
  ],
  "type": "components:ui"
}
